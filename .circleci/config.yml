version: 2
defaults: &defaults
  working_directory: ~/sputnik
  docker:
    - image: circleci/ruby:2.5.1-stretch-node-browsers
      environment:
        BUNDLE_JOBS: "4"
        BUNDLE_RETRY: "3"
        BUNDLE_PATH: vendor/bundle
        PGHOST: 127.0.0.1
        PGUSER: sputnik
        RAILS_ENV: test
    - image: circleci/postgres:10.4-alpine
      environment:
        POSTGRES_USER: sputnik
        POSTGRES_DB: sputnik
        POSTGRES_PASSWORD: ""

jobs:
  build:
    <<: *defaults
    steps:
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
  tests:
    <<: *defaults        
    steps:
      - checkout
      - attach_workspace:
          at: ~/sputnik/tmp  
      - run:
          name: Which bundler?
          command: bundle -v   
      - restore_cache:
          keys:
            - sputnik-bundle-{{ checksum "Gemfile.lock" }}
            - sputnik-bundle-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: sputnik-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:migrate seed:migrate
      - run:
          name: Run rspec tests
          command: |
            bundle exec rake
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.json coverage/.resultset.json
      - run:
          name: Test code quality
          command: |
            rake quality
      - persist_to_workspace:
          root: tmp
          paths: 
            - codeclimate.json

  upload-coverage:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/sputnik/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter upload-coverage -r $TEST_REPORTER_ID -i tmp/codeclimate.json
  
  deploy:
    docker:
      - image: dungeonmaster18/herokucli
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: | 
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
            heroku run "HEROKU_EMAIL=$HEROKU_EMAIL HEROKU_API_KEY=$HEROKU_API_KEY rake db:migrate seed:migrate" -a $HEROKU_APP_NAME

workflows:
  version: 2
  sputnik-deploy:
    jobs:
      - build
      - tests:
          requires:
            - build
      - upload-coverage:
          requires:
            - tests
      - deploy:
          requires:
            - tests
            - upload-coverage
          filters:
            branches:
              only: master
